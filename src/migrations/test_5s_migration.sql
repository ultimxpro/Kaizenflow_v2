-- Script de test pour la migration 5S
-- √Ä ex√©cuter apr√®s avoir cr√©√© les tables et migr√© les donn√©es

-- ===========================================
-- TESTS DE VALIDATION
-- ===========================================

-- 1. V√©rifier que les tables ont √©t√© cr√©√©es
DO $$
BEGIN
    -- V√©rifier l'existence des tables
    IF NOT EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'five_s_checklists') THEN
        RAISE EXCEPTION 'Table five_s_checklists n''existe pas';
    END IF;

    IF NOT EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'five_s_items') THEN
        RAISE EXCEPTION 'Table five_s_items n''existe pas';
    END IF;

    IF NOT EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'five_s_assignments') THEN
        RAISE EXCEPTION 'Table five_s_assignments n''existe pas';
    END IF;

    IF NOT EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'five_s_photos') THEN
        RAISE EXCEPTION 'Table five_s_photos n''existe pas';
    END IF;

    RAISE NOTICE '‚úÖ Toutes les tables 5S existent';
END $$;

-- 2. V√©rifier les politiques RLS
DO $$
DECLARE
    policy_count INTEGER;
BEGIN
    SELECT COUNT(*) INTO policy_count
    FROM pg_policies
    WHERE tablename LIKE 'five_s_%';

    IF policy_count = 0 THEN
        RAISE EXCEPTION 'Aucune politique RLS trouv√©e pour les tables 5S';
    END IF;

    RAISE NOTICE '‚úÖ % politiques RLS configur√©es pour les tables 5S', policy_count;
END $$;

-- 3. Tester les fonctions utilitaires
DO $$
DECLARE
    test_result RECORD;
BEGIN
    -- Tester la fonction de calcul des statistiques
    SELECT * INTO test_result FROM calculate_5s_progress('00000000-0000-0000-0000-000000000000');

    RAISE NOTICE '‚úÖ Fonction calculate_5s_progress fonctionne';

    -- Tester la fonction de v√©rification de migration
    SELECT * INTO test_result FROM verify_5s_migration();

    RAISE NOTICE '‚úÖ Fonction verify_5s_migration fonctionne';
    RAISE NOTICE 'üìä Statut migration: %', test_result.migration_status;
END $$;

-- ===========================================
-- TESTS DE DONN√âES
-- ===========================================

-- 4. Ins√©rer des donn√©es de test
DO $$
DECLARE
    test_module_id UUID := '11111111-1111-1111-1111-111111111111';
    test_user_id UUID := '22222222-2222-2222-2222-222222222222';
    test_checklist_id UUID;
    test_item_id UUID;
BEGIN
    -- Cr√©er un module de test (si n√©cessaire)
    INSERT INTO a3_modules (id, project_id, quadrant, tool_type, position, titre)
    VALUES (test_module_id, '33333333-3333-3333-3333-333333333333', 'PLAN', '5S', 1, 'Module 5S Test')
    ON CONFLICT (id) DO NOTHING;

    -- Cr√©er une checklist de test
    INSERT INTO five_s_checklists (module_id, title, description, created_by)
    VALUES (test_module_id, 'Checklist Test 5S', 'Checklist de test pour validation', test_user_id)
    RETURNING id INTO test_checklist_id;

    RAISE NOTICE '‚úÖ Checklist de test cr√©√©e: %', test_checklist_id;

    -- Cr√©er des items de test pour chaque cat√©gorie
    INSERT INTO five_s_items (checklist_id, category, title, description, status, priority, created_by)
    VALUES
        (test_checklist_id, 'seiri', 'Trier les documents obsol√®tes', 'Identifier et supprimer les documents inutiles', 'pending', 'medium', test_user_id),
        (test_checklist_id, 'seiton', 'Ranger les outils', 'D√©finir une place pour chaque outil', 'in_progress', 'high', test_user_id),
        (test_checklist_id, 'seiso', 'Nettoyer les postes', '√âtablir un plan de nettoyage quotidien', 'completed', 'medium', test_user_id),
        (test_checklist_id, 'seiketsu', 'Standardiser les proc√©dures', 'Cr√©er des standards de rangement', 'pending', 'low', test_user_id),
        (test_checklist_id, 'shitsuke', 'Maintenir les habitudes', 'Mettre en place des audits r√©guliers', 'pending', 'high', test_user_id)
    RETURNING id INTO test_item_id;

    RAISE NOTICE '‚úÖ Items de test cr√©√©s pour la checklist %', test_checklist_id;

    -- Cr√©er une photo de test
    INSERT INTO five_s_photos (
        item_id,
        filename,
        original_filename,
        file_path,
        photo_type,
        description,
        uploaded_by
    ) VALUES (
        test_item_id,
        'test_photo_20250907.jpg',
        'Photo_Test_5S.jpg',
        '5s-photos/items/test_photo_20250907.jpg',
        'before',
        'Photo de test pour validation',
        test_user_id
    );

    RAISE NOTICE '‚úÖ Photo de test cr√©√©e';

    -- Tester les statistiques
    PERFORM calculate_5s_progress(test_checklist_id);
    RAISE NOTICE '‚úÖ Calcul des statistiques r√©ussi';

EXCEPTION WHEN OTHERS THEN
    RAISE NOTICE '‚ö†Ô∏è Erreur lors des tests: %', SQLERRM;
END $$;

-- ===========================================
-- V√âRIFICATIONS FINALES
-- ===========================================

-- 5. Afficher un r√©sum√© des donn√©es
SELECT
    'Checklists' as table_name,
    COUNT(*) as count
FROM five_s_checklists
UNION ALL
SELECT
    'Items' as table_name,
    COUNT(*) as count
FROM five_s_items
UNION ALL
SELECT
    'Assignments' as table_name,
    COUNT(*) as count
FROM five_s_assignments
UNION ALL
SELECT
    'Photos' as table_name,
    COUNT(*) as count
FROM five_s_photos
UNION ALL
SELECT
    'Photo Comments' as table_name,
    COUNT(*) as count
FROM five_s_photo_comments
UNION ALL
SELECT
    'History' as table_name,
    COUNT(*) as count
FROM five_s_history
UNION ALL
SELECT
    'Progress Stats' as table_name,
    COUNT(*) as count
FROM five_s_progress_stats;

-- 6. V√©rifier l'int√©grit√© des donn√©es
SELECT
    fsc.id as checklist_id,
    fsc.title,
    COUNT(fsi.id) as items_count,
    COUNT(DISTINCT fsi.category) as categories_count,
    ROUND(
        (COUNT(CASE WHEN fsi.status = 'completed' THEN 1 END)::DECIMAL /
         NULLIF(COUNT(fsi.id), 0) * 100)::DECIMAL,
        2
    ) as completion_percentage
FROM five_s_checklists fsc
LEFT JOIN five_s_items fsi ON fsc.id = fsi.checklist_id
GROUP BY fsc.id, fsc.title
ORDER BY fsc.created_at DESC;

-- ===========================================
-- NETTOYAGE DES DONN√âES DE TEST
-- ===========================================

-- Supprimer les donn√©es de test (optionnel)
-- DELETE FROM five_s_photos WHERE filename LIKE 'test_photo_%';
-- DELETE FROM five_s_items WHERE title LIKE 'Trier les documents%' OR title LIKE 'Ranger les outils%';
-- DELETE FROM five_s_checklists WHERE title = 'Checklist Test 5S';
-- DELETE FROM a3_modules WHERE id = '11111111-1111-1111-1111-111111111111';

-- ===========================================
-- R√âSULTAT FINAL
-- ===========================================

DO $$
BEGIN
    RAISE NOTICE '';
    RAISE NOTICE 'üéâ TESTS DE MIGRATION 5S TERMIN√âS';
    RAISE NOTICE '';
    RAISE NOTICE 'Si vous voyez ce message, la migration s''est d√©roul√©e avec succ√®s !';
    RAISE NOTICE '';
    RAISE NOTICE 'Prochaines √©tapes :';
    RAISE NOTICE '1. V√©rifier les donn√©es migr√©es dans votre application';
    RAISE NOTICE '2. Tester la cr√©ation de nouvelles checklists';
    RAISE NOTICE '3. Tester l''upload de photos';
    RAISE NOTICE '4. Mettre √† jour l''interface utilisateur si n√©cessaire';
    RAISE NOTICE '';
END $$;